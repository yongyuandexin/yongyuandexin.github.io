<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>网络地位</title>
    <url>/2020/10/15/%E7%BD%91%E7%BB%9C%E5%9C%B0%E4%BD%8D/</url>
    <content><![CDATA[<h2 id="在这里你将学到网络地位"><a href="#在这里你将学到网络地位" class="headerlink" title="在这里你将学到网络地位"></a>在这里你将学到网络地位</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java的地位</tag>
      </tags>
  </entry>
  <entry>
    <title>需求地位</title>
    <url>/2020/10/15/%E9%9C%80%E6%B1%82%E5%9C%B0%E4%BD%8D/</url>
    <content><![CDATA[<h2 id="在这里你将学到需求地位"><a href="#在这里你将学到需求地位" class="headerlink" title="在这里你将学到需求地位"></a>在这里你将学到需求地位</h2>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java的地位</tag>
      </tags>
  </entry>
  <entry>
    <title>语言地位</title>
    <url>/2020/10/15/%E8%AF%AD%E8%A8%80%E5%9C%B0%E4%BD%8D/</url>
    <content><![CDATA[<ul>
<li>导航<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bridged（桥接模式）</span><br><span class="line">host-only(仅主机模式)</span><br><span class="line">NAT（地址转换模式）</span><br><span class="line">学习Linux的注意事项</span><br><span class="line">防火墙</span><br><span class="line">命令格式与目录处理命令ls</span><br><span class="line">命令名称： mkdir</span><br><span class="line">命令名称：cd</span><br><span class="line">命令名称：pwd</span><br><span class="line">命令名称：rmdir</span><br><span class="line">命令名称：cp</span><br><span class="line">命令名称：mvMongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。  Nosql 技术门类 redis 内存型 mongodb 文档型</span><br><span class="line"></span><br><span class="line">MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</span><br><span class="line"></span><br><span class="line">命令名称：rm</span><br><span class="line"></span><br><span class="line">命令英文原意： remove</span><br><span class="line">命令名称： touch</span><br><span class="line">命令名称：cat</span><br><span class="line">命令名称：tac</span><br><span class="line">命令名称 more</span><br><span class="line">命令名称：less</span><br><span class="line">命令名称：head</span><br><span class="line">命令名称：tail</span><br><span class="line">命令名称：ln</span><br><span class="line">命令名称： chmod</span><br><span class="line">命令名称：chown</span><br><span class="line">命令名称： chgrp</span><br><span class="line">权限管理命令： umask</span><br><span class="line">命令名称：find</span><br><span class="line">命令名称： locate</span><br><span class="line">命令名称： which</span><br><span class="line">命令名称： whereis</span><br><span class="line">命令名称：grep</span><br><span class="line">命令名称：man</span><br><span class="line">命令名称：help</span><br><span class="line">命令名称： useradd</span><br><span class="line">命令名称： passwd</span><br><span class="line">命令名称：who</span><br><span class="line">命令名称：w</span><br><span class="line">命令名称：gzip</span><br><span class="line">命令名称： gunzip</span><br><span class="line">命令名称:tar</span><br><span class="line">命令名称：zip</span><br><span class="line"></span><br><span class="line">命令名称:unzip</span><br><span class="line">命令名称:bzip2</span><br><span class="line">命令名称: bunzip2</span><br><span class="line">指令名称： write</span><br><span class="line">指令名称：wall</span><br><span class="line">命令名称：ping</span><br><span class="line">命令名称： ifconfig</span><br><span class="line">命令名称：mail</span><br><span class="line">命令名称:last</span><br><span class="line">命令名称： traceroute</span><br><span class="line"></span><br><span class="line">命令名称：netstat</span><br><span class="line">shutdown命令</span><br><span class="line">其他关机命令</span><br><span class="line">其他重启命令</span><br><span class="line">系统运行级别</span><br><span class="line">退出登录命令</span><br><span class="line">Vim工作模式</span><br><span class="line">插入命令</span><br><span class="line">定位命令</span><br><span class="line">删除命令</span><br><span class="line">复制和剪切命令</span><br><span class="line">搜索和搜索替换命令</span><br><span class="line">保存和退出命令</span><br><span class="line">导入命令执行结果</span><br><span class="line"></span><br><span class="line">RPM包依赖性</span><br><span class="line">RPM安装</span><br><span class="line">RPM包升级</span><br><span class="line">卸载</span><br><span class="line">查询是否安装</span><br><span class="line">查询软件包的依赖性</span><br><span class="line">查询软件包详细信息</span><br><span class="line">查询包中文件安装位置</span><br><span class="line">查询系统文件属于哪个RPM包</span><br><span class="line">常用yum命令</span><br><span class="line">RPM包默认安装路径</span><br><span class="line">源码包安装位置</span><br><span class="line">源码包安装过程</span><br><span class="line">源码包的卸载</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F; passwd</span><br><span class="line">初始组和附加组</span><br><span class="line">Shell是什么</span><br><span class="line">影子文件&#x2F;etc&#x2F;shadow</span><br><span class="line"></span><br><span class="line">组信息文件&#x2F;etc&#x2F;group</span><br><span class="line">组密码文件&#x2F;etc&#x2F;gshadow</span><br><span class="line">用户的家目录</span><br><span class="line">用户的邮箱</span><br><span class="line">用户模板目录</span><br><span class="line">添加默认用户</span><br><span class="line">指定选项添加用户</span><br><span class="line">用户默认值文件</span><br><span class="line">passwd命令格式</span><br><span class="line">查看密码状态</span><br><span class="line">锁定用户和解锁用户</span><br><span class="line">使用字符串作为用户的密码</span><br><span class="line">修改用户信息usermod</span><br><span class="line">修改用户密码状态chage</span><br><span class="line">删除用户 userdel</span><br><span class="line">手工删除用户</span><br><span class="line">查看用户ID</span><br><span class="line">切换用户身份su</span><br><span class="line">添加用户组</span><br><span class="line">删除用户组</span><br><span class="line">SetUID的功能</span><br><span class="line">设定SetUID的方法</span><br><span class="line">取消SetUID的方法</span><br><span class="line">危险的 SetUID</span><br><span class="line">chattr命令格式</span><br><span class="line">查看文件系统属性</span><br><span class="line">sudo权限</span><br><span class="line">分区类型</span><br><span class="line">分区表示方法</span><br><span class="line">分区的设备文件名</span><br><span class="line">文件系统查看命令df</span><br><span class="line">统计目录或文件大小</span><br><span class="line">du命令和df命令的区别</span><br><span class="line">査询与自动挂载</span><br><span class="line">挂载命令格式</span><br><span class="line">挂载光盘</span><br><span class="line">卸载命令</span><br><span class="line">挂载U盘</span><br><span class="line">查看新硬盘</span><br><span class="line">使用fdisk命令分区</span><br><span class="line">重新读取分区表信息</span><br><span class="line">格式化分区</span><br><span class="line">建立挂载点并挂载</span><br><span class="line">&#x2F;etc&#x2F;fsab文件</span><br><span class="line">分区自动挂载</span><br><span class="line">&#x2F;etc&#x2F;fstab文件修复</span><br><span class="line">shell</span><br><span class="line">echo输出命令</span><br><span class="line">第一个脚本</span><br><span class="line">脚本执行</span><br><span class="line">历史命令history</span><br><span class="line">命令执行时顺序</span><br><span class="line">标准输出重定向</span><br><span class="line">标准错误输出重定</span><br><span class="line">正确输出和错误输出同时保存    </span><br><span class="line">输入重定向wc</span><br><span class="line">多命令顺序执行</span><br><span class="line">变量分类</span><br><span class="line">用户自定义变量</span><br><span class="line">环境变量</span><br><span class="line">位置参数变量</span><br><span class="line">预定义变量</span><br><span class="line">declare声明变量类型</span><br><span class="line">数值运算一方法1</span><br><span class="line">方法2：expr或let数值运算工具</span><br><span class="line">方法3:“$((运算式))”或“S[运算式]”</span><br><span class="line">source命令</span><br><span class="line">正则表达式与通配符</span><br><span class="line">cut</span><br><span class="line">printf</span><br><span class="line">两种判断格式</span><br><span class="line">单分支if条件语句</span><br><span class="line">多分支if条件语句</span><br><span class="line">case</span><br><span class="line">while循环</span><br><span class="line">unti循环</span><br><span class="line">进程管理</span><br><span class="line">ps指令详解</span><br><span class="line">终止进程  kill和   killall</span><br><span class="line"></span><br><span class="line">查看进程树   pstree</span><br><span class="line">服务(Service)管理</span><br><span class="line">服务的运行级别(runlevel)</span><br><span class="line">开机的流程说明</span><br><span class="line">chkconfig指令</span><br><span class="line">动态监控进程</span><br><span class="line">查看系统网络情况   netstat(重要)</span><br></pre></td></tr></table></figure>
<ul>
<li>Bridged（桥接模式）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">VMnet0表示的是用于桥接模式下的虚拟交换机；</span><br><span class="line">VMnet1表示的是用于仅主机模式下的虚拟交换机；</span><br><span class="line">VMnet8表示的是用于NAT模式下的虚拟交换机。</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200831084842463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">同时，在主机的“网络连接”中我们可以看到这两块虚拟网卡，</span><br><span class="line">VMware Network Adapter VMnet1       作用于仅主机模式，用来实现虚拟机和物理机进行通信，和联网无关系，它的联网需要物理网卡的共享才能上网</span><br><span class="line">VMware Network Adapter VMnet8    作用于NAT模式，用来实现虚拟机和物理机进行通信，和联网无关系，它是借助于虚拟nat进行联网</span><br><span class="line">如果将这两块卸载了，可以在vmware的“编辑”下的“虚拟网络编辑器”中点击“还原默认设置”，可重新将虚拟网卡还原。</span><br><span class="line">看到这里，大家肯定有疑问，为什么在物理机上没有VMware Network Adapter VMnet0虚拟网卡呢？因为桥接模式是通过虚拟网桥进行通信和联网的，而不需要虚拟网卡来使虚拟机和物理机进行通信</span><br><span class="line"></span><br><span class="line">桥接模式就是将主机网卡与虚拟机的网卡利用虚拟网桥进行通信。在桥接的作用下，类似于把物理主机虚拟为一个交换机，所有桥接设置的虚拟机连接到这个交换机的一个接口上，物理主机也同样插在这个交换机当中，所以所有桥接下的网卡与网卡都是交换模式的，相互可以访问而不干扰。</span><br><span class="line"></span><br><span class="line">在桥接模式下，虚拟机ip地址需要与主机在同一个网段，如果需要联网，则网关与DNS需要与主机网卡一致。其网络结构如下图所示：</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200831085153890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
</li>
<li>host-only(仅主机模式)<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host-Only模式是出于安全考虑，Host-Only模式将虚拟机与外网隔开，使得虚拟机成为一个独立的系统，只与主机相互通讯。</span><br><span class="line"></span><br><span class="line">如果要使得虚拟机能联网，我们可以将主机网卡共享给VMware Network Adapter VMnet1网卡，从而达到虚拟机联网的目的</span><br><span class="line">Host-Only模式其实就是NAT模式去除了虚拟NAT设备，然后使用VMware Network Adapter VMnet1虚拟网卡连接VMnet1虚拟交换机来与虚拟机通信的，其网络结构如下图所示：</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200830192741696.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="*"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">只可以进行虚拟机之间的访问，访问不了本机的真实网卡，即主机网卡。但可以访问VMware Network Adapter VMnet1这块虚拟网卡。图中红线表示到达不了。</span><br></pre></td></tr></table></figure>
<ul>
<li>NAT（地址转换模式）<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 一般虚拟机上网，使用桥接模式配置简单，但如果你的网络环境是ip资源很缺少或对ip管理比较严格的话，那桥接模式就不太适用了，而我们又需要联网。</span><br><span class="line"> 我们该如何解决呢？</span><br><span class="line"></span><br><span class="line">我们需要用到vmware的另一种网络模式：NAT模式。</span><br><span class="line">NAT模式借助虚拟NAT设备和虚拟DHCP服务器，使得虚拟机可以联网。其网络结构如下图所示：</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200831083051319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  在NAT模式中，主机网卡直接与虚拟NAT设备相连，然后虚拟NAT设备与虚拟DHCP服务器一起连接在虚拟交换机VMnet8上，这样就实现了虚拟机联网。</span><br><span class="line"></span><br><span class="line">那么我们会觉得很奇怪，为什么需要虚拟网卡VMware Network Adapter VMnet8呢？</span><br><span class="line">原来我们的VMware Network Adapter VMnet8虚拟网卡主要是为了实现主机与虚拟机之间的通信。</span><br><span class="line"></span><br><span class="line">NAT模式，利用虚拟的NAT设备以及虚拟DHCP服务器来使虚拟机连接外网，而VMware Network Adapter VMnet8虚拟网卡是用来与虚拟机通信的。</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li>学习Linux的注意事项<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">在Linux系统中,一切皆文件.而且Linux没有扩展名这个概念,</span><br><span class="line">只是人为设定的扩展名,跟windows不一样.</span><br><span class="line">Linux能区分不同的文件类型,并不需要根据扩展名来区分.</span><br><span class="line">Linux所有的存储设备都必须挂载之后,用</span><br><span class="line">户才能使用,包括硬盘&#x2F;U盘&#x2F;光盘</span><br><span class="line">Windows下的程序不能直接在 Linux中安</span><br><span class="line">装和运行.</span><br></pre></td></tr></table></figure></li>
<li>防火墙<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">防火墙相当于一张渔网,不能起到防病毒的作用,</span><br><span class="line">只是过滤作用,符合规则的就可以了过,否则过不了.</span><br></pre></td></tr></table></figure>
<blockquote>
<p>man<br>语法：man [命令或配置文件]<br>功能描述：获得帮助信息<br>范例： $ man ls<br><img src="https://img-blog.csdnimg.cn/20200919213729913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>help<br>语法：help命令<br>功能描述：获得Shell内置命令的帮助信息、<br>ls<br>命令名称：ls</p>
</blockquote>
</li>
</ul>
<p>-a 显示所有文件，包括隐藏文件<br>-l 详细信息显示<br>-d 查看目录属性<br>-h 人性化显示大小<br>-i 查看节点<br>-R   递归显示指定目录下的文件清单，即会显示指定目录分支内各子目录中的文件清单。<br> ls 通配符的使用<br><img src="https://img-blog.csdnimg.cn/20200919193658368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>cd<br>语法：cd [目录]<br>功能描述：切换目录<br><img src="https://img-blog.csdnimg.cn/20200919193928504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>touch<br>如果文件 不存在，可以创建一个空白文件<br>如果文件 已经存在，可以修改文件的末次修改日期<br>-p    可以递归创建目录<br>rm<br>功能描述：删除文件<br>-r删除目录  # 删除目录是时需要这个选项，不删除目录时不需要<br>-f强制执行 # 此选项表示不会提醒，直接删除<br>tree<br>tree 命令可以以树状图列出文件目录结构<br>-d    只显示目录<br>cp<br>语法：cp -rp  [原文件或目录]  [目标目录]<br>-i    覆盖文件前提示<br>-r复制目录<br>-p保留文件属性<br>功能描述：复制文件或目录<br>mv<br>语法：mv  [原文件或目录]  [目标目录]<br>-i    覆盖文件前提示<br>mv的两种情况:<br>1.mv aa.txt bb.txt # 把aa.txt改为bb.txt<br>2.mv aa.txt   bb # 其中那个bb是已存在的目录，则aa.txt被移动到bb目录中<br>3.mv aa bb # 其中bb是不存在的目录，则aa目录被改名为bb<br>4 mv aa bb # 其中bb是已存在的目录，则aa目录被移动到bb目录中.<br>cat<br>语法：cat [文件名]<br>功能描述：显示文件内容<br>-b    对非空输出行编号<br>-n    对输出的所有行编号<br>more<br>语法：more  [文件名]<br>more 命令可以用于分屏显示文件内容，每次只显示一页内容<br>适合于 查看内容较多的文本文件<br><img src="https://img-blog.csdnimg.cn/20200919195501327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>grep<br>Linux 系统中 grep 命令是一种强大的文本搜索工具<br>grep允许对文本文件进行 模式查找，所谓模式查找，又被称为正则表达式，在就业班会详细讲解<br><img src="https://img-blog.csdnimg.cn/20200919200729611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>shutdown<br>重新启动操作系统，其中 now 表示现在<br>shutdown -r now<br>立刻关机，其中 now 表示现在<br>shutdown now<br>系统在今天的 20:25 会关机<br>shutdown 20:25<br>系统再过十分钟后自动关机<br>shutdown +10<br>取消之前指定的关机计划<br>shutdown -c<br>当我们关机或者重启时，都应该先执行sync指令，把内存的数据写入磁盘，防止数据丢失<br>其他关机命令<br>[root@localhost<del>]# halt<br>[root@localhost</del>]# poweroff<br>[root(@localhost<del>]# init 0<br>reboot<br>[root@localhost</del>]# reboot<br>[root@localhost~]# init 6<br>系统运行级别<br>0关机<br>1单用户<br>2不完全多用户，不含NFS服务<br>3完全多用户<br>4未分配<br>5图形界面<br>6重启<br>logout<br>[root@localhost ~]# logout<br>查看或配置网卡信息ifconfig/ping<br>ifconfig      # configure a network interface     查看/配置计算机当前的网卡配置信息<br>127.0.0.1 被称为 本地回环/环回地址，一般用来测试本机网卡是否正常<br>ping ip地址     # ping    检测到目标 ip地址 的连接是否正常<br>远程登录和复制文件<br>SSH 客户端的简单使用<br>ssh [-p port]  user@remote<br>user 是在远程机器上的用户名，如果不指定的话默认为当前用户<br>remote 是远程机器的地址，可以是 IP／域名，或者是 后面会提到的别名<br>port 是 SSH Server 监听的端口，如果不指定，就为默认值 22<br>使用 exit 退出当前用户的登录<br>scp<br>scp 就是 secure copy，是一个在 Linux 下用来进行 远程拷贝文件 的命令<br>它的地址格式与 ssh 基本相同，需要注意的是，在指定端口时用的是大写的 -P 而不是小写的<br>把本地当前目录下的 01.py 文件 复制到 远程 家目录下的 Desktop/01.py<br>注意：<code>:</code> 后面的路径如果不是绝对路径，则以用户的家目录作为参照路径<br>scp -P port 01.py user@remote:Desktop/01.py<br>把远程 家目录下的 Desktop/01.py 文件 复制到 本地当前目录下的 01.py<br>scp -P port user@remote:Desktop/01.py 01.py<br>加上 -r 选项可以传送文件夹<br>把当前目录下的 demo 文件夹 复制到 远程 家目录下的 Desktop<br>scp -r demo user@remote:Desktop<br>把远程 家目录下的 Desktop 复制到 当前目录下的 demo 文件夹<br>scp -r user@remote:Desktop demo<br><img src="https://img-blog.csdnimg.cn/20200919202349962.png#pic_center" alt="在这里插入图片描述"><br>chmod<br>执行权限：只有root跟所有者可以执行这个命令<br>语法：chmod[{ugoa}{+-}{rwx}[文件或目录]<br>            [mode=421][文件或目录<br>            -R递归修改<br>功能描述：改变文件或目录权限<br>权限的数字表示<br>r-4 w-2 x-1<br>$ chmod g+w testfile<br>赋予文件testfile所属组写权限<br>$ chmod -R 777 testdir<br>修改目录testfile及其目录下文件为所有用户具有全部权限<br>注意:rwx对目录跟文件的含义不一样,对于目录而<br>言,r表示可以列出目录内容,w表示可以删除/创建文件,<br>x表示可以进入目录,对于文件而言,r表示可以查看文件,<br>w表示可以修改文件,x表示可以执行文件.<br>pwd<br>功能描述：显示当前目录<br>创建用户／设置密码／删除用户<br><img src="https://img-blog.csdnimg.cn/20200919203625134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>/etc/passwd 文件存放的是用户的信息，由 6 个分号组成的 7 个信息，分别是<br>用户名<br>密码（x，表示加密的密码）<br>UID（用户标识）<br>GID（组标识）<br>用户全名或本地帐号<br>家目录<br>登录使用的 Shell，就是登录之后，使用的终端命令，ubuntu 默认是 dash<br>/etc/passwd 是用于保存用户信息的文件<br>/usr/bin/passwd 是用于修改用户密码的程序<br> 查看用户信息<br> <img src="https://img-blog.csdnimg.cn/20200919203739974.png#pic_center" alt="在这里插入图片描述"><br> usermod<br>修改用户的主组（passwd 中的 GID）<br>usermod -g 组 用户名<br>修改用户的附加组<br>usermod -G 组 用户名<br>修改用户登录 Shell<br>usermod -s  /bin/bash  用户名<br>注意：默认使用 useradd 添加的用户是没有权限使用 sudo 以 root 身份执行命令的，可以使用以下命令，将用户添加到 sudo 附加组中<br>usermod -G sudo 用户名<br> which<br>语法： which命令<br>功能描述：搜索命令所在目录及别名信息<br>bin 和 sbin<br>在 Linux 中，绝大多数可执行文件都是保存在 /bin、/sbin、/usr/bin、/usr/sbin<br>/bin（binary）是二进制执行文件目录，主要用于具体应用<br>/sbin（system binary）是系统管理员专用的二进制代码存放目录，主要用于系统管理<br>/usr/bin（user commands for applications）后期安装的一些软件<br>/usr/sbin（super user commands for applications）超级用户的一些管理程序<br>切换用户su<br><img src="https://img-blog.csdnimg.cn/20200919210256256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>修改文件权限<br>修改文件|目录的拥有者<br>chown 用户名 文件名|目录名<br>递归修改文件|目录的组<br>chgrp -R 组名 文件名|目录名<br>递归修改文件权限<br>chmod -R 755 文件名|目录名<br>时间和日期<br><img src="https://img-blog.csdnimg.cn/20200919210939300.png#pic_center" alt="在这里插入图片描述"><br>磁盘信息<br><img src="https://img-blog.csdnimg.cn/20200919211016236.png#pic_center" alt="在这里插入图片描述"><br>进程信息<br><img src="https://img-blog.csdnimg.cn/20200919211457911.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200919211511775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>find<br>语法：find  [搜索范围]  [匹配条件]<br>功能描述：文件搜索<br>[root@localhost aa]#  find /tmp  -name  init<br>/tmp/init<br>/tmp/aa/init<br>ln<br>命令英文原意：link<br>语法：ln-s [原文件] [目标文件]<br>s创建软链接<br>功能描述：生成链接文件<br>源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用<br>范例<br>$ ln -s /etc/issue  /tmp/issue.soft<br>创建文件/etc/issue的软链接/tmp/issue.soft<br>$ ln /etc/issue /tmp/issue.hard<br>创建文件/etc/issue的硬链接tmp/issue.hard<br>软链接特征：类似Windows快捷方式<br> 打包压缩<br>打包压缩 是日常工作中备份文件的一种方式<br>在不同操作系统中，常用的打包压缩方式是不同的<br>Windows 常用 rar<br>Mac 常用 zip<br>Linux 常用 tar.gz<br>打包 ／ 解包<br>tar 是 Linux 中最常用的 备份工具，此命令可以 把一系列文件 打包到 一个大文件中，也可以把一个 打包的大文件恢复成一系列文件<br>tar 的命令格式如下：<br> 打包文件<br>tar -cvf 打包文件.tar 被打包的文件／路径…<br>解包文件<br>tar -xvf 打包文件.tar<br>tar 选项说明<br><img src="https://img-blog.csdnimg.cn/20200919212855883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>压缩／解压缩<br>压缩文件<br>tar -zcvf 打包文件.tar.gz 被压缩的文件／路径…<br> 解压缩文件<br>tar -zxvf 打包文件.tar.gz<br>解压缩到指定路径<br>tar -zxvf 打包文件.tar.gz -C 目标路径<br>-C 解压缩到指定目录，注意：要解压缩的目录必须存在<br>bzip2<br>压缩文件<br>tar -jcvf 打包文件.tar.bz2  被压缩的文件／路径…<br>解压缩文件<br>tar -jxvf  打包文件.tar.bz2<br>软件安装apt<br>apt 是 Advanced Packaging Tool，是 Linux 下的一款安装包管理工具<br>可以在终端中方便的 安装／卸载／更新软件包<br>安装软件<br>$ sudo apt install 软件包<br> 卸载软件<br>$ sudo apt remove 软件名<br> 更新已安装的包<br>$ sudo apt upgrade<br>rmdir<br>命令英文原意： remove empty directories<br>语法：rmdir [目录名]<br>功能描述：删除空目录<br>范例：$ rmdir /tmp/yxj<br>whereis<br>语法： whereis 命令名称<br>功能描述：搜索命令所在目录及帮助文档路径<br>范例：$ whereis ls<br> passwd<br>语法：passwd 用户名<br>功能描述：设置用户密码<br>w<br>语法：w<br>功能描述：查看登录用户详细信息<br> write<br>语法：write &lt;用户名&gt;<br>功能描述：给用户发信息，以Ctrl+D保存结束<br>wall<br>语法：wall message<br>功能描述：发广播信息<br>ip<br>ip addr 查看IP地址<br>ip a  简化写法<br>mail<br>语法：mai [用户名]<br>功能描述：查看发送电子邮件<br>last<br>语法:last<br>功能描述:列出目前与过去登入系统的用户信息<br>lastlog<br>语法： lastlog<br>功能描述:检查某特定用户上次登录的时间<br>traceroute<br>语法： traceroute 网址<br>功能描述：显示数据包到主机间的路径<br>范例：#traceroute <a href="http://www.lampbrother.net/">www.lampbrother.net</a><br>netstat<br>语法： netstat [选项]<br>功能描述：显示网络相关信息<br>选项<br>-t：TCP协议<br>-u:UDP协议<br>-l:监听<br>-r:路由<br>-n:显示IP地址和端口号<br>范例:<br>netstat -tlun  查看本机监听的端口<br>netstat -an 查看本机所有的网络连接<br>netstat -rn  查看本机路由表</p>
<ul>
<li>Vim<blockquote>
<p>Vim是一个功能强大的全屏幕文本编辑器,<br>是Linux/UNIX上最常用的文本编辑器,<br>它的作用是建立、编辑、显示文本文件.<br>Vim没有菜单，只有命令<br>Vim工作模式<br><code>vi</code> 有三种基本工作模式：<br>命令模式<br>打开文件首先进入命令模式，是使用 <code>vi</code> 的 <strong>入口</strong><br>通过 <strong>命令</strong> 对文件进行常规的编辑操作，例如：<strong>定位</strong>、<strong>翻页</strong>、<strong>复制</strong>、<strong>粘贴</strong>、<strong>删除</strong>……<br>在其他图形编辑器下，通过 <strong>快捷键</strong> 或者 <strong>鼠标</strong> 实现的操作，都在 <strong>命令模式</strong> 下实现<br>末行模式—— 执行 <strong>保存</strong>、<strong>退出</strong> 等操作<br>要退出 <code>vi</code> 返回到控制台，需要在末行模式下输入命令<br>末行模式是 <code>vi</code> 的 <strong>出口</strong><br>编辑模式 —— 正常的编辑文字<br><img src="https://img-blog.csdnimg.cn/20200923222836890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>在日常工作中，有可能会遇到 <strong>打开一个文件，并定位到指定行</strong> 的情况<br>例如：在开发时，<strong>知道某一行代码有错误</strong>，可以 <strong>快速定位</strong> 到出错代码的位置<br>这个时候，可以使用以下命令打开文件<br>vi 文件名 +行数<br>提示：如果只带上 <code>+</code> 而不指定行号，会直接定位到文件末尾</p>
</blockquote>
</li>
</ul>
<blockquote>
<p>末行模式命令</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">w</td>
<td align="center">write</td>
<td>保存</td>
</tr>
<tr>
<td align="center">q</td>
<td align="center">quit</td>
<td>退出，如果没有保存，不允许退出</td>
</tr>
<tr>
<td align="center">q!</td>
<td align="center">quit</td>
<td>强行退出，不保存退出</td>
</tr>
<tr>
<td align="center">wq</td>
<td align="center">write &amp; quit</td>
<td>保存并退出</td>
</tr>
<tr>
<td align="center">x</td>
<td align="center"></td>
<td>保存并退出</td>
</tr>
</tbody></table>
<blockquote>
<p>移动<br>1.上、下、左、右</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
<th align="center">手指</th>
</tr>
</thead>
<tbody><tr>
<td align="center">h</td>
<td>向左</td>
<td align="center">食指</td>
</tr>
<tr>
<td align="center">j</td>
<td>向下</td>
<td align="center">食指</td>
</tr>
<tr>
<td align="center">k</td>
<td>向上</td>
<td align="center">中指</td>
</tr>
<tr>
<td align="center">l</td>
<td>向右</td>
<td align="center">无名指</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
<th align="center">手指</th>
</tr>
</thead>
<tbody><tr>
<td align="center">h</td>
<td>向左</td>
<td align="center">食指</td>
</tr>
<tr>
<td align="center">j</td>
<td>向下</td>
<td align="center">食指</td>
</tr>
<tr>
<td align="center">k</td>
<td>向上</td>
<td align="center">中指</td>
</tr>
<tr>
<td align="center">l</td>
<td>向右</td>
<td align="center">无名指</td>
</tr>
</tbody></table>
<blockquote>
<p>行内移动</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">w</td>
<td align="center">word</td>
<td>向后移动一个单词</td>
</tr>
<tr>
<td align="center">b</td>
<td align="center">back</td>
<td>向前移动一个单词</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center"></td>
<td>行首</td>
</tr>
<tr>
<td align="center">^</td>
<td align="center"></td>
<td>行首，第一个不是空白字符的位置</td>
</tr>
<tr>
<td align="center">$</td>
<td align="center"></td>
<td>行尾</td>
</tr>
</tbody></table>
<blockquote>
<p>定位命令<br>set nu设置行号<br>set nonu 取消行号</p>
</blockquote>
<blockquote>
<p>行数移动</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$</td>
<td align="center">$</td>
<td>移至行尾</td>
</tr>
<tr>
<td align="center">0</td>
<td align="center">0</td>
<td>移至行首</td>
</tr>
<tr>
<td align="center">gg</td>
<td align="center">go</td>
<td>文件顶部</td>
</tr>
<tr>
<td align="center">G</td>
<td align="center">go</td>
<td>文件末尾</td>
</tr>
<tr>
<td align="center">数字gg</td>
<td align="center">go</td>
<td>移动到 数字 对应行数</td>
</tr>
<tr>
<td align="center">数字G</td>
<td align="center">go</td>
<td>移动到 数字 对应行数</td>
</tr>
<tr>
<td align="center">:数字</td>
<td align="center"></td>
<td>移动到 数字 对应行数</td>
</tr>
<tr>
<td align="center">:n</td>
<td align="center">:n</td>
<td>到第n行</td>
</tr>
</tbody></table>
<blockquote>
<p>屏幕移动</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + b</td>
<td align="center">back</td>
<td>向上翻页</td>
</tr>
<tr>
<td align="center">Ctrl + f</td>
<td align="center">forward</td>
<td>向下翻页</td>
</tr>
<tr>
<td align="center">H</td>
<td align="center">Head</td>
<td>屏幕顶部</td>
</tr>
<tr>
<td align="center">M</td>
<td align="center">Middle</td>
<td>屏幕中间</td>
</tr>
<tr>
<td align="center">L</td>
<td align="center">Low</td>
<td>屏幕底部</td>
</tr>
</tbody></table>
<blockquote>
<p>段落移动<br> <code>vi</code> 中使用 空行 来区分段落<br>在程序开发时，通常 <strong>一段功能相关的代码会写在一起</strong> —— 之间没有空行</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">{</td>
<td>上一段</td>
</tr>
<tr>
<td align="center">}</td>
<td>下一段</td>
</tr>
</tbody></table>
<blockquote>
<p>括号切换<br>在程序世界中，<code>()</code>、<code>[]</code>、<code>&#123;&#125;</code> 使用频率很高，而且 <strong>都是成对出现的</strong></p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%</td>
<td>括号匹配及切换</td>
</tr>
</tbody></table>
<blockquote>
<p>标记<br> 在开发时，某一块代码可能<strong>需要稍后处理</strong>，例如：编辑、查看<br>此时先使用 <code>m</code> 增加一个标记，这样可以 <strong>在需要时快速地跳转回来</strong> 或者 <strong>执行其他编辑操作</strong><br><strong>标记名称</strong> 可以是 <code>a~z</code> 或者 <code>A~Z</code> 之间的任意 <strong>一个</strong> 字母<br>添加了标记的 <strong>行如果被删除</strong>，<strong>标记同时被删除</strong><br>如果 <strong>在其他行添加了相同名称的标记</strong>，<strong>之前添加的标记也会被替换掉</strong></p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">mx</td>
<td align="center">mark</td>
<td>添加标记 x，x 是 a<del>z 或者 A</del>Z 之间的任意一个字母</td>
</tr>
<tr>
<td align="center">‘x</td>
<td align="center"></td>
<td>直接定位到标记 x 所在位置</td>
</tr>
</tbody></table>
<blockquote>
<p>选中文本（可视模式）<br>按 <code>ESC</code> 可以放弃选中，返回到 <strong>命令模式</strong><br> <strong>可视模式</strong>下，可以和 <strong>移动命令</strong> 连用，例如：<code>ggVG</code> 能够选中所有内容</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>模式</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">v</td>
<td>可视模式</td>
<td>从光标位置开始按照正常模式选择文本</td>
</tr>
<tr>
<td align="center">V</td>
<td>可视行模式</td>
<td>选中光标经过的完整行</td>
</tr>
<tr>
<td align="center">Ctrl + v</td>
<td>可视块模式</td>
<td>垂直方向选中文本</td>
</tr>
</tbody></table>
<blockquote>
<p>撤销和恢复撤销</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">u</td>
<td align="center">undo</td>
<td>撤销上次命令</td>
</tr>
<tr>
<td align="center">CTRL + r</td>
<td align="center">redo</td>
<td>恢复撤销的命令</td>
</tr>
</tbody></table>
<blockquote>
<p>删除文本</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">x</td>
<td align="center">cut</td>
<td>删除光标所在字符，或者选中文字 ,nX 删除光标所在处后n个字符</td>
</tr>
<tr>
<td align="center">d(移动命令)</td>
<td align="center">delete</td>
<td>删除移动命令对应的内容</td>
</tr>
<tr>
<td align="center">dd</td>
<td align="center">delete</td>
<td>删除光标所在行ndd删除n行</td>
</tr>
<tr>
<td align="center">D</td>
<td align="center">delete</td>
<td>删除至行尾</td>
</tr>
</tbody></table>
<blockquote>
<p>复制、粘贴</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">y(移动命令)</td>
<td align="center">copy</td>
<td>复制</td>
</tr>
<tr>
<td align="center">yy</td>
<td align="center">copy</td>
<td>复制一行，可以 nyy 复制多行</td>
</tr>
<tr>
<td align="center">p</td>
<td align="center">paste</td>
<td>粘贴</td>
</tr>
<tr>
<td align="center">dd</td>
<td align="center">dd</td>
<td>剪切当前行,ndd 剪切当前行以下n行</td>
</tr>
</tbody></table>
<blockquote>
<p>替换</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
<th>工作模式</th>
</tr>
</thead>
<tbody><tr>
<td align="center">r</td>
<td align="center">replace</td>
<td>替换当前字符</td>
<td>命令模式</td>
</tr>
<tr>
<td align="center">R</td>
<td align="center">replace</td>
<td>替换当前行光标后的字符</td>
<td>替换模式</td>
</tr>
</tbody></table>
<blockquote>
<p>缩排和重复执行</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&gt;&gt;</td>
<td>向右增加缩进</td>
</tr>
<tr>
<td align="center">&lt;&lt;</td>
<td>向左减少缩进</td>
</tr>
<tr>
<td align="center">.</td>
<td>重复上次命令</td>
</tr>
</tbody></table>
<blockquote>
<p><strong>缩排命令</strong> 在开发程序时，<strong>统一增加代码的缩进</strong> 比较有用！<br>     一次性 <strong>在选中代码前增加 4 个空格</strong>，就叫做 <strong>增加缩进</strong><br>    *一次性 <strong>在选中代码前删除 4 个空格</strong>，就叫做 <strong>减少缩进</strong><br>在 <strong>可视模式</strong> 下，缩排命令只需要使用 <strong>一个</strong> <code>&gt;</code> 或者 <code>&lt;</code> </p>
</blockquote>
<blockquote>
<p>常规查找</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">/str</td>
<td>查找 str</td>
</tr>
</tbody></table>
<blockquote>
<p>查找到指定内容之后，使用 <code>Next</code> 查找下一个出现的位置：<br>     <code>n</code>: 查找下一个<br>    <code>N</code>: 查找上一个<br>单词快速匹配</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">*</td>
<td>向后查找当前光标所在单词</td>
</tr>
<tr>
<td align="center">#</td>
<td>向前查找当前光标所在单词</td>
</tr>
</tbody></table>
<blockquote>
<p>查找并替换<br>在 <code>vi</code> 中查找和替换命令需要在 <strong>末行模式</strong> 下执行<br>记忆命令格式：<br>:%s///g<br>全局替换<br><strong>一次性</strong>替换文件中的 <strong>所有出现的旧文本</strong><br>命令格式如下：<br>:%s/旧文本/新文本/g<br>可视区域替换<br><strong>先选中</strong> 要替换文字的 <strong>范围</strong><br>命令格式如下：<br>:s/旧文本/新文本/g<br>确认替换<br>如果把末尾的 <code>g</code> 改成 <code>gc</code> 在替换的时候，会有提示！<strong>推荐使用！</strong><br>:%s/旧文本/新文本/gc<br><code>y</code> - <code>yes</code> 替换<br> <code>n</code> - <code>no</code> 不替换<br><code>a</code> - <code>all</code> 替换所有<br><code>q</code> - <code>quit</code> 退出替换<br> <code>l</code> - <code>last</code> 最后一个，并把光标移动到行首<br> <code>^E</code> 向下滚屏<br><code>^Y</code> 向上滚屏</p>
</blockquote>
<blockquote>
<p>插入命令</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
<th align="center">常用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">i</td>
<td align="center">insert</td>
<td>在当前字符前插入文本</td>
<td align="center">常用</td>
</tr>
<tr>
<td align="center">I</td>
<td align="center">insert</td>
<td>在行首插入文本</td>
<td align="center">较常用</td>
</tr>
<tr>
<td align="center">a</td>
<td align="center">append</td>
<td>在当前字符后添加文本</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">A</td>
<td align="center">append</td>
<td>在行末添加文本</td>
<td align="center">较常用</td>
</tr>
<tr>
<td align="center">o</td>
<td align="center"></td>
<td>在当前行后面插入一空行</td>
<td align="center">常用</td>
</tr>
<tr>
<td align="center">O</td>
<td align="center"></td>
<td>在当前行前面插入一空行</td>
<td align="center">常用</td>
</tr>
</tbody></table>
<blockquote>
<p>编辑命令和数字连用<br><code>**********</code> 连续 10 个星号<br>要实现这个效果可以在 <strong>命令模式</strong> 下<br>输入 <code>10</code>，表示要重复 10 次<br>输入 <code>i</code> 进入 <strong>编辑模式</strong><br>输入 <code>*</code> 也就是重复的文字<br>按下 <code>ESC</code> 返回到 <strong>命令模式</strong>，返回之后 <code>vi</code> 就会把第 <code>2、3</code> 两步的操作重复 <code>10</code> 次<br> 利用 可视块 给多行代码增加注释<br>  移动到要添加注释的 <strong>第 1 行代码</strong>，按 <code>^</code> 来到行首<br> 按 <code>CTRL + v</code> 进入 <strong>可视块</strong> 模式<br> 使用 <code>j</code> 向下连续选中要添加的代码行<br>输入 <code>I</code> 进入 <strong>编辑模式</strong>，并在 <strong>行首插入</strong>，注意：一定要使用 <strong>I</strong><br> 输入 <code># </code> 也就是注释符号<br>按下 <code>ESC</code> 返回到 <strong>命令模式</strong>，返回之后 <code>vi</code> 会在之前选中的每一行代码 <strong>前</strong> 插入 <code># </code></p>
</blockquote>
<blockquote>
<p>末行命令扩展</p>
</blockquote>
<table>
<thead>
<tr>
<th align="center">命令</th>
<th align="center">英文</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">:e .</td>
<td align="center">edit</td>
<td>会打开内置的文件浏览器，浏览要当前目录下的文件</td>
</tr>
<tr>
<td align="center">:n 文件名</td>
<td align="center">new</td>
<td>新建文件</td>
</tr>
<tr>
<td align="center">:w 文件名</td>
<td align="center">write</td>
<td>另存为，但是仍然编辑当前文件，并不会切换文件</td>
</tr>
</tbody></table>
<blockquote>
<p>提示：切换文件之前，必须保证当前这个文件已经被保存！</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">导入命令执行结果：r！命令</span><br><span class="line">RPM包依赖性</span><br><span class="line">树形依赖：a→b→c</span><br><span class="line">环形依赖：a→&gt;b→c→a</span><br><span class="line">模块依赖：模块依赖査询网站 www.rpmfind.net</span><br><span class="line"></span><br><span class="line">包全名：操作的包是没有安装的软件包时，使用包全名。而且要注意路径</span><br><span class="line">包名：操作已经安装的软件包时，使用包名。是搜索var&#x2F;lib&#x2F;rpm&#x2F;中的数据库</span><br><span class="line"></span><br><span class="line">RPM安装</span><br><span class="line">rpm-ivh 包全名</span><br><span class="line">选项</span><br><span class="line">-i  (install) 安装</span><br><span class="line">-v (verbose) 显示详细信息</span><br><span class="line">-h (hash) 显示进度</span><br><span class="line">--nodeps 不检测依赖性</span><br><span class="line"></span><br><span class="line">RPM包升级</span><br><span class="line">rpm -Uvh包全名</span><br><span class="line">选项:</span><br><span class="line">-U (upgrade) 升级</span><br><span class="line"></span><br><span class="line">卸载</span><br><span class="line">rpm -e 包名</span><br><span class="line">选项</span><br><span class="line">-e (erase) 卸载</span><br><span class="line">--nodeps 不检查依赖性</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查询是否安装</span><br><span class="line"></span><br><span class="line">[root@localhost ~]#rpm -q 包名 #查询包是否安装</span><br><span class="line">选项：</span><br><span class="line"> -q 查询 (query)</span><br><span class="line">[root@localhost ~]# rpm -qa # 查询所有已经安装RPM包</span><br><span class="line">选项: -a所有(all)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查询软件包的依赖性</span><br><span class="line">[root@localhost ~]#rpm -qR 包名</span><br><span class="line">选项</span><br><span class="line">-R 查询软件包的依赖性(requires)</span><br><span class="line">-p查询未安装包信息(package)</span><br><span class="line"></span><br><span class="line">查询软件包详细信息</span><br><span class="line">[root@localhost ~]#rpm -qi 包名</span><br><span class="line">选项:</span><br><span class="line"> -i 查询软件信息、(information)</span><br><span class="line">-p 查询未安装包信息 (package)</span><br><span class="line"></span><br><span class="line">查询包中文件安装位置</span><br><span class="line">[root@localhost ~]# rpm -ql 包名</span><br><span class="line">选项</span><br><span class="line">-l 列表 (list)</span><br><span class="line">-p 查询未安装包信息 (package)</span><br><span class="line"></span><br><span class="line">查询系统文件属于哪个RPM包</span><br><span class="line">[root@localhost ~]#rpm -qf 系统文件名</span><br><span class="line">选项： -f查询系统文件属于哪个软件包（file）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">常用yum命令</span><br><span class="line">1）查询</span><br><span class="line">[root@localhost yum.repos.d]# yum list #查询所有可用软件包列表</span><br><span class="line">[root@localhost yum.repos.d]# yum search 关键字 # 搜索服务器上所有和关键字相关的包</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line">[root@localhost yum.repos.d]#yum -y install 包名</span><br><span class="line">选项：</span><br><span class="line">install 安装</span><br><span class="line">-y 自动回答yes</span><br><span class="line"></span><br><span class="line">3）升级</span><br><span class="line">root（@localhost yum. repos. d#f yum -y update</span><br><span class="line">选项：</span><br><span class="line">update升级</span><br><span class="line">自动回答yes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">YUM软件组管理命令</span><br><span class="line">[Root@localhost ~]# yum grouplist # 列出所有可用的软件组列表</span><br><span class="line"></span><br><span class="line">[root@localhos ~]# yum groupinstall 软件组名 # 安装指定软件组，组名可以出grouplist查询出来</span><br><span class="line">[root@ localhost ~]# yum groupremove 软件组名 # 卸载指定软件组</span><br><span class="line">卸载</span><br><span class="line">[root@localhost yum.repos.d]# yum -y remove 包名</span><br><span class="line">选项</span><br><span class="line">remove 卸载</span><br><span class="line">-y 自动回答yes</span><br><span class="line"></span><br><span class="line">RPM包默认安装路径</span><br><span class="line">&#x2F;etc 配置文件安装目录</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F; 可执行的命令安装目录</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F; 程序所使用的函数库保存位置</span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;doc&#x2F; 基本的软件使用手册保存位置</span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;man&#x2F; 帮助文件保存位置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">源码包安装位置</span><br><span class="line">安装在指定位置当中，一般是&#x2F;usr&#x2F;ocal&#x2F;软件名&#x2F;</span><br><span class="line"></span><br><span class="line">安裝位置不同带来的影响</span><br><span class="line">RPM包安装的服务可以使用系统服务管理命令(service)来管理，例如RPM包安装的apache的启动方法是&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;httpd start</span><br><span class="line">或者 service httpd start</span><br><span class="line"></span><br><span class="line">而源码包安装的服务则不能被服务管理命令管理，因为没有安装到默认路径中。所</span><br><span class="line">以只能用绝对路径进行服务的管理，如</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;apache2&#x2F;bin&#x2F;apachectl start</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">源码包安装过程</span><br><span class="line">下载源码包</span><br><span class="line">解压缩下载的源码包</span><br><span class="line">进入解压缩目录</span><br><span class="line"></span><br><span class="line">.&#x2F;configure 软件配置与检查</span><br><span class="line">定义需要的功能选项</span><br><span class="line">检测系统环境是否符合安装要求。</span><br><span class="line">把定义好的功能选项和检测系统环境的信息</span><br><span class="line">都写入Makefile文件，用于后续的编辑。</span><br><span class="line"></span><br><span class="line">make编译</span><br><span class="line">make clean</span><br><span class="line">make install # 编译安装</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">源码包的卸载</span><br><span class="line">不需要卸载命令，直接删除安装目录即可。</span><br><span class="line">不会遗留任何垃圾文件。</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F; passwd</span><br><span class="line">第1字段：用户名称</span><br><span class="line">第2字段：密码标志</span><br><span class="line">第3字段：UID（用户ID）</span><br><span class="line">0超级用户</span><br><span class="line">1-499 系统用户（伪用户）</span><br><span class="line">500-65535：普通用户</span><br><span class="line">第4字段：GID（用户初始组ID）</span><br><span class="line">第5字段：用户说明</span><br><span class="line">第6字段：家目录</span><br><span class="line">普通用户：&#x2F;home&#x2F;用户名&#x2F;</span><br><span class="line">超级用户：&#x2F;root&#x2F;</span><br><span class="line">第7字段：登录之后的 Shell</span><br><span class="line"></span><br><span class="line">初始组和附加组</span><br><span class="line">初始组：就是指用户一登录就立刻拥有这</span><br><span class="line">个用户组的相关权限，每个用户的初始组</span><br><span class="line">只能有一个，一般就是和这个用户的用户</span><br><span class="line">名相同的组名作为这个用户的初始组</span><br><span class="line">附加组：指用户可以加入多个其他的用户</span><br><span class="line">组，并拥有这些组的权限，附加组可以有多个。</span><br><span class="line"></span><br><span class="line">Shell是什么</span><br><span class="line">Shell是 Linux的命令解释器。</span><br><span class="line">在&#x2F;etc&#x2F;passwd当中，除了标准Shel是</span><br><span class="line">&#x2F;bin&#x2F;bash之外，还可以写如&#x2F;sbin&#x2F;nologin，</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;passwd等。</span><br><span class="line"></span><br><span class="line">影子文件&#x2F;etc&#x2F;shadow</span><br><span class="line">第1字段：用户名</span><br><span class="line">第2字段：加密密码</span><br><span class="line">如果密码位是“!!”或“*”代表没有密码，不能登</span><br><span class="line">录</span><br><span class="line">第3字段：密码最后一次修改日期</span><br><span class="line">使用1970年1月1日作为标准时间，每过一天时间戳</span><br><span class="line">第4字段：两次密码的修改间隔时间（和第3字段相比）</span><br><span class="line">第5字段：密码有效期（和第3字段相比）</span><br><span class="line">第6字段：密码修改到期前的警告天数（和第5字段相比）</span><br><span class="line">第7字段：密码过期后的宽限天数（和第5字段相比）</span><br><span class="line">0：代表密码过期后立即失效</span><br><span class="line">-1：则代表密码永远不会失效</span><br><span class="line">第8字段：账号失效时间</span><br><span class="line">要用时间戳表示</span><br><span class="line">第9字段：保留</span><br><span class="line">时间戳换算</span><br><span class="line">把时间戳换算为日期</span><br><span class="line">date-d&quot;1970-01-01 16066 days&quot;</span><br><span class="line">把日期换算为时间戳</span><br><span class="line">echo $(($(date --date&#x3D;&quot;2014&#x2F;01&#x2F;06&quot;+%s)&#x2F;86400+1))</span><br><span class="line"></span><br><span class="line">组信息文件&#x2F;etc&#x2F;group</span><br><span class="line">第一字段：组名</span><br><span class="line">第二字段：组密码标志</span><br><span class="line">第三字段：GID</span><br><span class="line">第四字段：组中附加用户</span><br><span class="line"></span><br><span class="line">组密码文件&#x2F;etc&#x2F;gshadow</span><br><span class="line">第一字段：组名</span><br><span class="line">第二字段：组密码</span><br><span class="line">第三字段：组管理员用户名</span><br><span class="line">第四字段：组中附加用户</span><br><span class="line"></span><br><span class="line">用户的家目录</span><br><span class="line">普通用户：&#x2F;home&#x2F;用户名&#x2F;，所有者和所属</span><br><span class="line">组都是此用户，权限是700</span><br><span class="line">超级用户：&#x2F;root，所有者和所属组都是</span><br><span class="line">root用户，权限是550</span><br><span class="line"></span><br><span class="line">用户的邮箱</span><br><span class="line">&#x2F;var&#x2F;spool&#x2F;mail&#x2F;用户名&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">用户模板目录</span><br><span class="line">&#x2F;etc&#x2F;skel&#x2F;</span><br><span class="line"></span><br><span class="line">useradd命令格式</span><br><span class="line">[root@localhost ~] useradd [选项] 用户名</span><br><span class="line">选项</span><br><span class="line">-u UID：手工指定用户的UID号</span><br><span class="line">-d家目录: 手工指定用户的家目录</span><br><span class="line">-c 用户说明: 手工指定用户的说明</span><br><span class="line">-g组名：手工指定用户的初始组</span><br><span class="line">-G组名：指定用户的附加组</span><br><span class="line">-s shell：手工指定用户的登录 shell.默认是&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">添加默认用户</span><br><span class="line">[root@localhost ~]# useradd lamp</span><br><span class="line">[root@localhost ~]# grep &quot;lamp&quot; &#x2F;etc&#x2F;passwd</span><br><span class="line">[ root@localhost ~]# grep &quot;lamp&quot; &#x2F;etc&#x2F;shadow</span><br><span class="line">[root@localhost ~]# grep &quot;lamp&quot; &#x2F;etc&#x2F;group</span><br><span class="line">[root@localhost ~]# grep &quot;lamp&quot; &#x2F;etc&#x2F;shadow</span><br><span class="line">[root@localhost ~]#ll -d &#x2F;home&#x2F;lamp&#x2F;</span><br><span class="line">[root@localhost ~]#ll &#x2F;var&#x2F;spool&#x2F;mail&#x2F;lamp</span><br><span class="line"></span><br><span class="line">指定选项添加用户</span><br><span class="line">groupadd lamp1</span><br><span class="line">useradd -u 550 -g lamp1 -G root -d &#x2F;home&#x2F;lampl</span><br><span class="line">-c &quot;test user&quot; -s &#x2F;bin&#x2F;bash lamp1</span><br><span class="line"></span><br><span class="line">用户默认值文件</span><br><span class="line">&#x2F;etc&#x2F;default&#x2F;useradd</span><br><span class="line">GROUP&#x3D;100 # 用户默认组</span><br><span class="line">HOME&#x3D;&#x2F;home # 用户家目录</span><br><span class="line">INACTIVE&#x3D;-1 # 密码过期宽限天数（7）</span><br><span class="line">EXPIRE # 密码失效时间（8）</span><br><span class="line">SHELL&#x3D;&#x2F;bin&#x2F;bash #默认shell</span><br><span class="line">SKEL&#x3D;&#x2F;etc&#x2F;skel # 模板目录</span><br><span class="line">CREATE_MAIL_SPOOL&#x3D;yes #是否建立邮箱</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;login.defs</span><br><span class="line">PASS_MAX_DAYS 99999 # 密码有效期（5）</span><br><span class="line">PASS_MIN_DAYS 0 # 密码修改间隔（4）</span><br><span class="line">PASS_MIN_LEN 5 # 密码最小5位（PAM）</span><br><span class="line">PASS_WARN_AGE 7 # 密码到期警告（6）</span><br><span class="line">UID MIN 500 # 最小和最大UID范围</span><br><span class="line">GID_MAX  60000</span><br><span class="line">ENCRYPT_METHOD SHA512 # 加密模式</span><br><span class="line"></span><br><span class="line">passwd命令格式</span><br><span class="line">[root@localhost ~]# passwd [选项] 用户名</span><br><span class="line">选项：</span><br><span class="line">-S 查询用户密码的密码状态。仅root用户可用。</span><br><span class="line">-l 暂时锁定用户。仅root用户可用</span><br><span class="line">-u 解锁用户。仅root用户可用</span><br><span class="line">--stdin 可以通过管道符输出的数据作为用户的密码。</span><br><span class="line"></span><br><span class="line">查看密码状态</span><br><span class="line">[root@localhost ~]# passwd -S lamp</span><br><span class="line">lamp PS 2013-01-06 0 99999 7 -1</span><br><span class="line">#用户名密码设定时间（2013-01-06）密码修改间隔时间（0）</span><br><span class="line">#密码有效朝（9999) 警告时间（7） 密码不失效（-1）</span><br><span class="line"></span><br><span class="line">锁定用户和解锁用户</span><br><span class="line">[root@localhost ~]# passwd -l lamp</span><br><span class="line">[root@localhost ~]# passwd -u lamp</span><br><span class="line"></span><br><span class="line">使用字符串作为用户的密码</span><br><span class="line">[root@localhost ~]# echo&quot;123 | passwd --stdin lamp</span><br><span class="line"></span><br><span class="line">修改用户信息usermod</span><br><span class="line">[root@localhost ~]#usermod [选项] 用户名</span><br><span class="line">选项：</span><br><span class="line">	-u UID：		修改用户的UID号</span><br><span class="line">	-c 用户说明：	修改用户的说明信息</span><br><span class="line">	-G 组名：		修改用户的附加组</span><br><span class="line">	-L：		临时锁定用户（Lock）</span><br><span class="line">	-U：		解锁用户锁定（Unlock）</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# usermod -c &quot;test user&quot; lamp #修改用户的说明</span><br><span class="line">[root@localhost ~]# usermod -G root lamp #把lamp用户加入root组</span><br><span class="line">[root@localhost ~]# usermod -L lamp #锁定用户</span><br><span class="line">[root@localhost ~]# usermod -U lamp #解锁用户</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改用户密码状态chage</span><br><span class="line">[root@localhost ~]#chage [选项] 用户名</span><br><span class="line">选项：</span><br><span class="line">	-l：		列出用户的详细密码状态</span><br><span class="line">	-d 日期：	修改密码最后一次更改日期（shadow3字段）-m 天数：	两次密码修改间隔（4字段）</span><br><span class="line">	-M 天数：	密码有效期（5字段）</span><br><span class="line">	-W 天数：	密码过期前警告天数（6字段）</span><br><span class="line">	-I 天数：	密码过后宽限天数（7字段）</span><br><span class="line">	-E 日期：	账号失效时间（8字段）</span><br><span class="line"></span><br><span class="line">root@localhost ~]# chage -d 0 lamp  </span><br><span class="line">#这个命令其实是把密码修改日期归0了（shadow第3字段）</span><br><span class="line">#这样用户一登陆就要修改密码</span><br><span class="line"></span><br><span class="line">删除用户 userdel</span><br><span class="line">[root@localhost ~]# userdel [-r] 用户名</span><br><span class="line">选项: -r 删除用户的同时删除用户家目录</span><br><span class="line"></span><br><span class="line">手工删除用户</span><br><span class="line">[root@localhost ~]# vi&#x2F;etc&#x2F;passwd</span><br><span class="line">[root@localhost ~]# vi&#x2F;etc&#x2F;shadow</span><br><span class="line">[ root(@localhost ~]# vi&#x2F;etc&#x2F;group</span><br><span class="line">[root@localhost ~]# vi&#x2F;etc&#x2F;gshadow</span><br><span class="line">[root(@localhost ~]# rm-rf&#x2F;var&#x2F;spool&#x2F;mail&#x2F;lamp</span><br><span class="line">[root(@localhost ~]#rm-rf &#x2F;home&#x2F;lamjp&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看用户ID</span><br><span class="line">[root@localhost ~]#id 用户名</span><br><span class="line"></span><br><span class="line">切换用户身份su</span><br><span class="line">[root@localhos ~]#su [选项] 用户名</span><br><span class="line">选项：</span><br><span class="line">-:选项只使用“-”代表连带用户的环境变量一起切换</span><br><span class="line">-c命令:仅执行一次命令，而不切换用户身份</span><br><span class="line"></span><br><span class="line">[lamp@localhost ~]su - root #切换成oot</span><br><span class="line">[lamp@localhost]$ su - root -c &quot;useradd user3&quot; # 不切换成oot，但是执行useradd命令添加uer1用户</span><br><span class="line"></span><br><span class="line">添加用户组</span><br><span class="line">[root@loclalhost ~]# groupadd [选项] 组名</span><br><span class="line">选项： -g GID: 指定组ID</span><br><span class="line"></span><br><span class="line">[root@loclalhost ~]# groupmod [选项] 组名</span><br><span class="line">选项:</span><br><span class="line"> -g GID: 修改组ID</span><br><span class="line"> -n  新组名:   修改新组名</span><br><span class="line">[root@loclalhost ~]# groupmod  -n testgrp group1 # 把组名group1修改为testgrp</span><br><span class="line"> </span><br><span class="line">删除用户组</span><br><span class="line">[root@loclalhost ~]# groupdel 组名</span><br><span class="line"></span><br><span class="line">把用户添加入组或从组中删除</span><br><span class="line">[root@loclalhost ~]#  gpasswd  选项 组名</span><br><span class="line">选项：</span><br><span class="line">-a 用户名； 把用户加入组</span><br><span class="line">-d 用户名； 把用户从组中删除</span><br><span class="line">gpasswd -a user1 root</span><br><span class="line">gpasswd -d user1 root</span><br><span class="line"></span><br><span class="line">SetUID的功能</span><br><span class="line">只有可以执行的二进制程序才能设定SUID权限</span><br><span class="line">命令执行者要对该程序拥有x（执行）权限</span><br><span class="line">命令执行者在执行该程序时获得该程序文件属主的身份（在执行程序的过程中灵魂附体为文</span><br><span class="line">件的属主）</span><br><span class="line">SetUID权限只在该程序执行过程中有效，也就</span><br><span class="line">是说身份改变只在程序执行过程中有效</span><br><span class="line"></span><br><span class="line">passwd命令拥有SetUID权限，所以普通可以修改自己的密码</span><br><span class="line">[root@localhost ~] ll &#x2F;usr&#x2F;bin&#x2F;passwd</span><br><span class="line">-rwsr-xr-x. 1 root root 25980 2月 22 2012&#x2F;usr&#x2F;bin&#x2F;passwd</span><br><span class="line">cat命令没有SetUID权限，所以普通用户不能查看&#x2F;etc&#x2F;shadow文件内容</span><br><span class="line">[root@localhost ~]# ll &#x2F;bin&#x2F;cat</span><br><span class="line">-rwxr-xr-x 1 root root 47976 6月 22 2012&#x2F;bin&#x2F;cat</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200905225000245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">设定SetUID的方法</span><br><span class="line">4代表SUID</span><br><span class="line">chmod 4755 文件名</span><br><span class="line">chmod u+s 文件名</span><br><span class="line"></span><br><span class="line">取消SetUID的方法</span><br><span class="line">chmod 755 文件名</span><br><span class="line">chmod u-s 文件名</span><br><span class="line"></span><br><span class="line">危险的 SetUID</span><br><span class="line">关键目录应严格控制写权限。比如“&#x2F;”、“&#x2F;usr”等</span><br><span class="line">用户的密码设置要严格遵守密码三原则</span><br><span class="line">对系统中默认应该具有SetUID权限的文件</span><br><span class="line">作一列表，定时检查有没有这之外的文件</span><br><span class="line">被设置了SetUID权限</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chattr命令格式</span><br><span class="line">[root@localhost ~]# chattr [+-&#x3D;] [选项] 文件或目录名</span><br><span class="line">+：增加权限</span><br><span class="line">-:删除权限</span><br><span class="line">&#x3D;:等于某权限</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line">i：如果对文件设置i属性，那么不允许对文件进行</span><br><span class="line">删除、改名，也不能添加和修改数据；如果对目录</span><br><span class="line">设置i属性，那么只能修改目录下文件的数据，但</span><br><span class="line">不允许建立和删除文件。</span><br><span class="line">a：如果对文件设置a属性，那么只能在文件中增加</span><br><span class="line">数据，但是不能删除也不能修改数据；如果对目录</span><br><span class="line">设置a属性，那么只允许在目录中建立和修改文件,</span><br><span class="line">但是不允许删除</span><br><span class="line"></span><br><span class="line">查看文件系统属性</span><br><span class="line">[root@localhost ~]#lsattr 选项 文件名</span><br><span class="line">选项:</span><br><span class="line">-a 显示所有文件和目录</span><br><span class="line">-d 若目标是目录，仅列出目录本身的属性，而不是子文件的</span><br><span class="line"></span><br><span class="line">分区类型</span><br><span class="line">主分区：总共最多只能分四个</span><br><span class="line">扩展分区：只能有一个，也算作主分区的一种</span><br><span class="line">，也就是说主分区加扩展分区最多有四个。但</span><br><span class="line">是扩展分区不能存储数据和格式化，必须再划</span><br><span class="line">分成逻辑分区才能使用。</span><br><span class="line">逻辑分区：逻辑分区是在扩展分区中划分的，</span><br><span class="line">如果是IDE硬盘，Linux最多支持59个逻辑分区</span><br><span class="line">,如果是SCSI硬盘 Linux最多支持11个逻辑分区</span><br><span class="line"></span><br><span class="line">分区表示方法</span><br><span class="line">主分区1 &#x2F;dev&#x2F;sda1</span><br><span class="line">主分区2 &#x2F;dev&#x2F;sda2</span><br><span class="line">主分区3 &#x2F;dev&#x2F;sda3</span><br><span class="line">扩展分区 &#x2F;dev&#x2F;sda4</span><br><span class="line">逻辑分区1 &#x2F;dev&#x2F;sda5</span><br><span class="line">逻辑分区2 &#x2F;dev&#x2F;sda6</span><br><span class="line">逻辑分区3 &#x2F;dev&#x2F;sda7</span><br><span class="line"></span><br><span class="line">分区的设备文件名</span><br><span class="line">主分区1 &#x2F;dev&#x2F;sal</span><br><span class="line">扩展分区 &#x2F;dev&#x2F;sda2</span><br><span class="line">逻辑分区1 &#x2F;dev&#x2F;sda5</span><br><span class="line">逻辑分区2 &#x2F;dev&#x2F;sda6</span><br><span class="line">逻辑分区3 &#x2F;dev&#x2F;sda7</span><br><span class="line"></span><br><span class="line">文件系统查看命令df</span><br><span class="line">【root@localhost ~]#df [选项] [挂载点]</span><br><span class="line">选项：</span><br><span class="line">-a 显示所有的文件系统信息，包括特殊文件系统，如&#x2F;proc、&#x2F;sysfs</span><br><span class="line">-h 使用习惯单位显示容量，如KB，MB或GB等</span><br><span class="line">-T显示文件系统类型</span><br><span class="line">-m 以MB为单位显示容量</span><br><span class="line">-k 以KB为单位显示容量。默认就是以KB为单位</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">统计目录或文件大小</span><br><span class="line">[root@localhost ~]#du [选项] [目录或文件名]</span><br><span class="line">选项</span><br><span class="line">-a 显示每个子文件的磁盘占用量。默认只统计子目录的磁盘占用量</span><br><span class="line">-h 使用习惯单位显示磁盘占用量，如KB，MB或GB等</span><br><span class="line">-s 统计总占用量，而不列出子目录和子文件的占用量</span><br><span class="line"></span><br><span class="line">du命令和df命令的区别</span><br><span class="line">df命令是从文件系统考虑的，不光要考虑文件占用的空间，还要统计被命令或程序</span><br><span class="line">占用的空间（最常见的就是文件已经删除，但是程序并没有释放空间）</span><br><span class="line">du命令是面向文件的，只会计算文件或目录占用的空间</span><br><span class="line"></span><br><span class="line">査询与自动挂载</span><br><span class="line">[root@localhost ~]# mount [-l] # 查询系统中已经挂载的设备，-l会显示卷标名称</span><br><span class="line">[root@localhost ~]# mount -a # 依据配置文件&#x2F;etc&#x2F;fstab的内容，自动挂载</span><br><span class="line"></span><br><span class="line">挂载命令格式</span><br><span class="line">[root@localhost ~]# mount [-t 文件系统] [-L 卷标名]\</span><br><span class="line">[-o 特殊选项] 设备文件名 挂载点</span><br><span class="line">选项:</span><br><span class="line">-t 文件系统：加入文件系统类型来指定挂载的类型，可以ext3、ext4、iso9660等文件系统</span><br><span class="line">-L 卷标名: 挂载指定卷标的分区，而不是安装设备文件名挂载</span><br><span class="line">-o 特殊选项：可以指定挂载的额外选项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">挂载光盘</span><br><span class="line">[root@localhost ~]# mkdir&#x2F;mnt&#x2F;cdrom&#x2F; # 建立挂载点</span><br><span class="line">[root@localhost ~]# mount-t iso9660 &#x2F;dev&#x2F;cdrom &#x2F;mnt&#x2F;cdrom&#x2F; # 挂载光盘</span><br><span class="line">[root@localhost ~]# mount&#x2F;dev&#x2F;sr0 &#x2F;mnt&#x2F;cdrom&#x2F;</span><br><span class="line"></span><br><span class="line">卸载命令</span><br><span class="line">[root@localhost ~]# umount 设备文件名或挂载点</span><br><span class="line">[root@localhost ~]# umount &#x2F;mnt&#x2F;cdrom</span><br><span class="line"></span><br><span class="line">挂载U盘</span><br><span class="line">[root@localhost ~]# fdisk -l # 查看U盘设备文件名</span><br><span class="line">[root@localhost ~]# mount -t vfat &#x2F;dev&#x2F;sdbl&#x2F;mnt&#x2F;usb&#x2F;</span><br><span class="line">注意： Linux默认是不支持NTFS文件系统的</span><br><span class="line"></span><br><span class="line">查看新硬盘</span><br><span class="line">[root@localhost ~]# fdisk -1</span><br><span class="line">使用fdisk命令分区</span><br><span class="line">[root@localhost ~]# fdisk &#x2F;dev&#x2F;sdb</span><br><span class="line">重新读取分区表信息</span><br><span class="line">[root@localhost ~】# partprobe</span><br><span class="line">格式化分区</span><br><span class="line">[root@localhost ~]# mkfs -t ext4 &#x2F;dev&#x2F;sdbl</span><br><span class="line"></span><br><span class="line">建立挂载点并挂载</span><br><span class="line">[root@localhost ~]# mkdir &#x2F;disk1</span><br><span class="line">[root@localhost ~]# mount &#x2F;dev&#x2F;sdbl &#x2F;disk1&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;fsab文件</span><br><span class="line">第一字段：分区设备文件名或UUID（硬盘通用唯一识别码）</span><br><span class="line">第二字段：挂载点</span><br><span class="line">第三字段：文件系统名称</span><br><span class="line">第四字段：挂载参数</span><br><span class="line">第五字段：指定分区是否被dump备份，0代表不备份，1代表每天备份，2代表不定期备份</span><br><span class="line">第六字段：指定分区是否被fsck检测，0代表不检测，其他数字代表检测的优先级，那么当然1的优先级比2高</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">分区自动挂载</span><br><span class="line">[root@localhost ~]# vi&#x2F;etc&#x2F;fstab</span><br><span class="line">...省略部分输出...</span><br><span class="line">dev&#x2F;sdb5  &#x2F;disks   ext4 defaults 1  2</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;fstab文件修复</span><br><span class="line">[root @localhost ~]# mount -o remount,,rw &#x2F;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>shell<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo输出命令</span><br><span class="line">[root@localhost ~]# echo [选项] [输出内容」</span><br><span class="line">选项:</span><br><span class="line">-e  支持反斜线控制的字符转换</span><br><span class="line"></span><br><span class="line">第一个脚本</span><br><span class="line">[root@localhost sh]# vi hello. sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#The first program</span><br></pre></td></tr></table></figure>
<h1 id="Author-shenchao-E-mail-115-104-x65-x6e-99-x68-97-x6f-64-108-97-109-x70-98-114-111-116-104-101-114-x2e-x6e-x65-x74"><a href="#Author-shenchao-E-mail-115-104-x65-x6e-99-x68-97-x6f-64-108-97-109-x70-98-114-111-116-104-101-114-x2e-x6e-x65-x74" class="headerlink" title="Author: shenchao (E-mail: &#115;&#104;&#x65;&#x6e;&#99;&#x68;&#97;&#x6f;&#64;&#108;&#97;&#109;&#x70;&#98;&#114;&#111;&#116;&#104;&#101;&#114;&#x2e;&#x6e;&#x65;&#x74;)"></a>Author: shenchao (E-mail: <a href="mailto:&#115;&#104;&#x65;&#x6e;&#99;&#x68;&#97;&#x6f;&#64;&#108;&#97;&#109;&#x70;&#98;&#114;&#111;&#116;&#104;&#101;&#114;&#x2e;&#x6e;&#x65;&#x74;">&#115;&#104;&#x65;&#x6e;&#99;&#x68;&#97;&#x6f;&#64;&#108;&#97;&#109;&#x70;&#98;&#114;&#111;&#116;&#104;&#101;&#114;&#x2e;&#x6e;&#x65;&#x74;</a>)</h1>echo -e “Mr Shen Chao is the most honest man in<br>Lamp brother”</li>
</ul>
<p>脚本执行<br>赋予执行权限，直接运行<br>chmod 755 hello.sh<br> ./hello. sh<br>通过Bash调用执行脚本<br>bash hello.sh</p>
<p>历史命令history<br>[root@localhost <del>]# history [选项] [历史命令保存文件」<br>选项；<br>-c: 清空历史命令<br>-w: 把缓存中的历史命令写入历史命令保存文件</del>/.bash history</p>
<p>历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中进行修改</p>
<p>命令别名<br>[root@localhost ~]# alias别名=’原命令’ # 设定命令别名<br>[root@localhost ~]# alias # 查询命令别名</p>
<p>命令执行时顺序<br>第一顺位执行用绝对路径或相对路径执行的命令<br>2第二顺位执行别名。<br>3第三顺位执行Bash的内部命令。<br>4第四顺位执行按照$PATH环境变量定义的目录查找顺序找到的第一个命令。</p>
<p>[root@localhost ~]# vi /root/.bashrc  让别名永久生效<br>[root@localhost ~]# unalias 别名  删除别名</p>
<p>标准输出重定向<br>命令 &gt; 文件 以覆盖的方式，把命令的正确输出输出到指定的文件或设备当中<br>命令&gt;&gt;文件 以追加的方式，把命令的正确输出输出到指定的文件或设备当中。<br>标准错误输出重定<br>错误命令2&gt; 以覆盖的方式，把命令的文件错误输出输出到指定的文件或设备当中<br>错误命令2&gt;文件 以追加的方式，把命令的错误输出输出到指定的文件或设备当中。</p>
<p>正确输出和错误输出同时保存<br>命令 &amp;&gt; 文件 以覆盖的方式，把正确输出和错误输出都保存到同个文件当中。</p>
<p>命令 &amp;&gt;&gt; 文件 以追加的方式，把正确输出和错误输出都保存到同个文件当中。</p>
<p>命令 &gt;&gt; 文件1 2&gt;&gt; 文件2  把正确的输出追加到文件1中，把错误的输出追加到文件2中。</p>
<p>输入重定向wc<br>[root@localhost ~]# wc [选项] [文件名]<br>选项:<br>-c 统计字节数<br>-w 统计单词数<br>-l 统计行数</p>
<p>多命令顺序执行<br>多命令执行符      格式             作用<br>；              命令1；命令2       多个命令顺序执行，命令之间没有任何逻辑联系<br>&amp;&amp;              命令1&amp;&amp;命令2       逻辑与<br>                                  当命令1正确执行，则命令2才会执行<br>                                  当命令1执行不正确，则命令2不会执行<br>||               命令1||命令2      逻辑或，当命令1执行不正确，则命令2才会执行<br>                                   当命令1正确执行，则命令2不会执行</p>
<p>[root@localhost ~]# grep [选项] “搜索内容” 文件名<br>选项<br>-i忽略大小写<br>-n输出行号<br>-v反向查找<br>–color=auto 搜索出的关键字用颜色显示</p>
<p>变量分类<br>用户自定义变量，也叫本地变量<br>变量定义<br>[root@localhost ~]# name=”shen chao”<br>变量叠加<br>[root@localhost ~]# aa=123<br>[root@localhost ~]# aa=”$aa”456<br>[root@localhost ~]# aa=${aa}789</p>
<p>变量调用<br>[root@localhost ~]# echo $name<br>变量查看<br>[root@localhost ~]# set<br>变量删除<br>[root@localhost ~]# unset name<br>环境变量：这种变量中主要保存的是和<br>系统操作环境相关的数据。<br>用户自定义变量只在当前的Shell生效，<br>而环境变量会在当前Shel和这个Shel所<br>有子Shell当中生效。如果把环境变量写入<br>相应的配置文件，那么这个环境变量就会<br>在所有的Shell中生效</p>
<p>设置环境变量<br>export 变量名=变量值 # 申明变量<br>env # 查询变量<br>unset 变量名 # 删除交量</p>
<p>系统常见环境变量<br>PATH：系统查找命令的路径<br>[root@localhost ~】# echo $PATH<br>/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:<br>/sbin:/bin:/usr/sbin:/usr/bin：/root/bin<br>PATH=”$PATH”:/root/sh #PATH变量叠加</p>
<p>PSl：定义系统提示符的变量<br>\d：显示日期，格式为“星期 月 日”<br>\h：显示简写主机名。如默认主机名“ localhost”<br>\t：显示24小时制时间，格式为“HH:MM:SS”<br>\T：显示12小时制时间，格式为“ HH:MM:SS”<br>\A：显示24小时制时间，格式为“HH:MM”<br>\u：显示当前用户名<br>\w：显示当前所在目录的完整名称<br>\W：显示当前所在目录的最后一个目录<br>#：执行的第几个命令<br>$：提示符。如果是root用户会显示提示符为“#”，如果是普通用户会显示提示符为“$”<br>[root@localhost]# PS1=’[\u@\t \w]$‘</p>
<p>位置参数变量：这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的。</p>
<p>$n n为数字，$0代表命令本身，$1-$9代表第一到第九个参数，十以上的参数需要用大括号<br>包含，如${10}<br>$* 这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体<br>$@ 这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待<br>$# 这个变量代表命令行中所有参数的个数</p>
<p>预定义变量：是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的。</p>
<p>$?   最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正确执行；如果这个变量为非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正确.<br>$$ 当前进程的进程号（PID）<br>$! 后台运行的最后一个进程的进程号（PID）</p>
<p>接收键盘输入<br>[root@localhost ~]#read [选项] [变量名]<br>选项<br>-p  “提示信息” ：在等待read输入时，输出提示信息<br>-t秒数: read命令会一直等待用户输入，使用此选项可以指定等待时间<br>-n 字符数: read命令只接受指定的字符数，就会执行<br>-s: 隐藏输入的数据，适用于机密信息的输入</p>
<p>declare声明变量类型<br>[root@localhost ~]# declare[+/-] [选项] 变量名<br>选项:<br>-:给变量设定类型属性<br>+:取消变量的类型属性<br>-i:将变量声明为整数型（Integer）<br>-x:将变量声明为环境变量<br>-p:显示指定变量的被声明的类型</p>
<p>数值运算一方法1<br>[root@localhost ~]# aa=1l<br>[root@localhost ~]# bb-=22<br>[root@localhost ~]# declare -i cc=$aa+$bb</p>
<p>方法2：expr或let数值运算工具<br>[root@localhost ~]# aa=1l<br>[root@localhost ~]# bb=22<br>[root@localhost ~]# dd=$(expr $aa + $bb)<br>#dd的值是aa和bb的和。注意“+”号左右两侧必须有空熔</p>
<p>方法3:“$((运算式))”或“S[运算式]”<br>[root@lalocalhost ~]# aa=11<br>[root@localhost ~]# bb=22<br>[root(@localhost ~]# ff=$(($aa+$bb))<br>[root(@localhost ~]#gg=$[$aa+$bb]</p>
<p>source命令<br>[root@localhost ~]# source 配置文件<br>或<br>[root@localhost ~]# .配置文件<br>/etc/profile<br>/etc/profile.d/*.sh<br>~/.bash_profile<br>/.bashrc<br>/etc/bashrc</p>
<p>正则表达式与通配符<br>正则表达式用来在文件中匹配符合条件的字符串，正则是包含匹配。<br>grep/awk/sed等命令可以支持正则表达式。<br>通配符用来匹配符合条件的文件名，通配符是完全匹配。ls、find、cp这些命令不<br>支持正则表达式，所以只能使用shell自己的通配符来进行匹配了。</p>
<ul>
<li>前一个字符匹配0次，或任意多次<br>.匹配除了换行符外任意一个字符<br>“^”匹配行首，“$”匹配行尾<br>“[]”匹配中括号中指定的任意一个字符，只匹配一个字符<br>“[^]”匹配除中括号的字符以外的任意一个字符<br>“{n}”表示其前面的字符恰好出现n次<br>“{n，}” 表示其前面的字符出现不小于n次<br>“{n，m}”匹配其前面的字符至少出现n次，最多出现m次</li>
</ul>
<p>cut<br>[root@localhost ~]#cut [选项] 文件名<br>选项：<br>-f 列号:  提取第几列<br>-d 分隔符: 按照指定分隔符分割列</p>
<p>[root@localhost ~]# cut -f 2 student.txt<br>[root@localhost ~]# cut-f 2,3 student.txt<br>[root@localhost ~]# cut-d “:” -f 1,3 /etc/passwd</p>
<p>printf<br>printf ‘输出类型输出格式’ 输出内容<br>输出类型：<br>%ns:输出字符串.n是数字指代输出几个字符<br>%ni:输出整数。n是数字指代输出几个数字<br>%m.nf：输出浮点数。m和n是数字，指代输出的整数位数和小数位数。如%8.2f代表共输出8位数，<br>其中2位是小数，6位是整数.</p>
<p>[root@localhost ~] printf %s 1 2 3 4 5 6<br>[root@localhost ~]# printf %s %s %s 1 2 3 4 5 6<br>[root@localhost ~]# printf ‘%s %s %s’ 1 2 3 4 5 6<br>[root@localhost ~]# printf ‘%s %s %s\n’ 1 2 3 4 5 6</p>
<p>[root@localhost ~]# vi student.txt<br>ID Name    PHP   Linux MySQL Average<br>1  Liming    82   95    86    87.66<br>2    Sc      74   96    87    85.66<br>3    Gao     99    83   93    91.66</p>
<p>printf ‘%s’ $(cat student.txt) # 不调整输出格式<br>printf ‘%s\t %s\t %s\t %s\t %s\t %s\t \n’  $(cat student.txt) # 调整格式输出<br>在awk命令的输出中支持print和printf命令<br>print：print会在每个输出之后自动加入个换行符（Linux默认没有print命令）<br>prinf：printf是标准格式输出命令，并不会自动加入换行符，如果需要换行，需要手工加入换行符</p>
<p>条件判断<br>两种判断格式<br>按照文件类型进行判断<br>[root@localhost ~]# test -e /root/install.log<br>[root@localhost ~]# [ -e /root/install.log]<br>[ -d /root ] &amp;&amp; echo “yes” || echo”no” # 第一个判断命令如果正确执行，则打印“yes”，否则打印“no”</p>
<p>按照文件权限进行判断<br>[-w student.txt ] &amp;&amp; echo”yes” || echo”no” # 判断文件是拥有写权限的</p>
<p>单分支if条件语句<br>if [条件判断式];then<br>    程序<br>fi<br>或者<br>if [ 条件判断式 ]<br>    then<br>        then<br>fi</p>
<p>单分支条件语句需要注意几个点<br>if语句使用fi结尾，和一般语言使用大括号结尾不同<br>[ 条件判断式 ]就是使用test命令判断，所以中括号和条件判断式之间必须有空格<br>then后面跟符合条件之后执行的程序,<br>以放在[]之后，用“；”分割。也可以换行写入，就不需要“;”了</p>
<p>双分支if条件语句<br>if [ 条件判断式 ]<br>    then<br>        条件成立时，执行的程序<br>    else<br>        条件不成立时，执行的另一个程序<br>fi</p>
<p>多分支if条件语句<br>if [ 条件判断式1 ]<br>    then<br>        当条件判断式1成立时，执行程序1<br>elif [ 条件判断式2 ]<br>    then<br>        当条件判断式2成立时，执行程序2<br>…省略更多条件…<br>else<br>    当所有条件都不成立时，最后执行此程序<br>fi</p>
<p>case<br>case $变量名 in<br>“值1”)<br>    如果变量的值等于值1，则执行程序1<br>“值2”)<br>    如果变量的值等于值2，则执行程序2<br>…省略其他分支…<br>*)<br>    如果变量的值都不是以上的值，则执行此程序<br>    ;;<br>esac</p>
<p>while循环<br>while [ 条件判断式 ]<br>    do<br>        程序<br>    done</p>
<p>unti循环<br>until [ 条件判断式 ]<br>do<br>    程序<br>done</p>
<p>进程管理<br>1)在 LINUX中，每个执行的程序（代码）都称为一个进程。每一个进程都分配一个 ID号。<br>2)每一个进程，都会对应一个父进程，而这个父进程可以复制多个子进程。例如 www服务器。<br>3)每个进程都可能以两种方式存在的。前台与后台，所谓前台进程就是用户目前的屏幕上可以进<br>行操作的。后台进程则是实际在操作，但由于屏幕上无法看到的进程，通常使用后台方式执行。<br>4)一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中。直到关机才才结束。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913220306807.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center)</span><br></pre></td></tr></table></figure>
<p>ps指令详解<br>1)指令：ps–aux|grep  xxx，比如我看看有没有   sshd服务<br>2)指令说明<br>System V展示风格<br>USER：用户名称<br>PID：进程号<br>%CPU：进程占用 CPU的百分比<br>%MEM：进程占用物理内存的百分比<br>VSZ：进程占用的虚拟内存大小（单位：KB）<br>RSS：进程占用的物理内存大小（单位：KB）<br>TT：终端名称,缩写  .<br>STAT：进程状态，其中 S-睡眠，s-表示该进程是会话的先导进程，N-表示进程拥有比普通优先<br>级更低的优先级，R-正在运行，D-短期等待，Z-僵死进程，T-被跟踪或者被停止等等<br>•STARTED：进程的启动时间<br>TIME：CPU时间，即进程使用  CPU的总时间<br>COMMAND：启动进程所用的命令和参数，如果过长会被截断显示</p>
<p>以全格式显示当前所有的进程，查看进程的父进程。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913220704796.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center)</span><br></pre></td></tr></table></figure>
<p>ps -ef是以全格式显示当前所有的进程<br>-e显示所有进程。-f全格式。<br>ps -ef|grep xxx<br>是 BSD风格<br>UID：用户  ID<br>PID：进程  ID<br>PPID：父进程  ID<br>C：CPU用于计算执行优先级的因子。数值越大，表明进程是  CPU密集型运算，执行优先级会<br>降低；数值越小，表明进程是 I/O密集型运算，执行优先级会提高<br>•STIME：进程启动的时间<br>•TTY：完整的终端名称<br>•TIME：CPU时间<br>•CMD：启动进程所用的命令和参数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line">如果我们希望查看  sshd进程的父进程号是多少，应该怎样查询</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913221105935.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">终止进程  kill和   killall</span><br><span class="line"></span><br><span class="line">若是某个进程执行一半需要停止时，或是已消了很大的系统资源时，此时可以考虑停止该进程。</span><br><span class="line">使用 kill命令来完成此项任务。</span><br><span class="line"></span><br><span class="line">kill   [选项]进程号（功能描述：通过进程号杀死进程）</span><br><span class="line">killall进程名称（功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负载过大而变</span><br><span class="line">得很慢时很有用）</span><br><span class="line">常用选项：</span><br><span class="line"></span><br><span class="line">-9 :表示强迫进程立即停止</span><br><span class="line">最佳实践：</span><br><span class="line">踢掉某个非法登录用户</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913221716493.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">终止远程登录服务  sshd,在适当时候再次重启   sshd服务</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913221826851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">终止多个  gedit编辑器【killall     ,通过进程名称来终止进程】</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913223320545.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">强制杀掉一个终端</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020091322344215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看进程树   pstree</span><br><span class="line">pstree [选项] ,可以更加直观的来看进程信息</span><br><span class="line">-p :显示进程的  PID</span><br><span class="line">-u :显示进程的所属用户</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">服务(Service)管理</span><br><span class="line">服务(service)本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其它程序的请</span><br><span class="line">求，比如(mysql , sshd防火墙等)，因此我们又称为守护进程，是    Linux中非常重要的知识点。【原</span><br><span class="line">理图】</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913224245387.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center)</span><br></pre></td></tr></table></figure>
<p>service管理指令：<br>service 服务名     [start | stop | restart | reload | status]<br>在 CentOS7.0后不再使用   service ,而是  systemctl<br>systemctl 服务命令<br>systemctl status|start|stop|restart 服务名  mysqld firewalld(防火墙) network(网络)<br>    systemctl status 服务名          说明:查看某个服务的运行状态<br>    systemctl start 服务名                     说明:启动某个服务<br>    systemctl restart 服务名                 说明:重启某个服务<br>    systemctl stop 服务名                         说明:停止某个服务<br>查看当前防火墙的状况，关闭防火墙和重启防火墙。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913230457381.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center)</span><br></pre></td></tr></table></figure>
<p>细节讨论：<br>1)关闭或者启用防火墙后，立即生效。[telnet测试某个端口即可]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913230613714.png#pic_center)</span><br></pre></td></tr></table></figure>
<p>2)这种方式只是临时生效，当重启系统后，还是回归以前对服务的设置。<br>如果希望设置某个服务自启动或关闭永久生效，要使用 chkconfig指令</p>
<p>查看服务名:<br>使用 setup -&gt;系统服务就可以看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913234644893.png?x-oss-process&#x3D;image&#x2F;watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center)</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;服务名称</span><br><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913234716682.png#pic_center)</span><br><span class="line">* 服务的运行级别(runlevel):</span><br></pre></td></tr></table></figure>
<p>查看或者修改默认级别：   vi /etc/inittab<br>Linux系统有  7种运行级别(runlevel)：常用的是级别 3和   5<br>运行级别 0：系统停机状态，系统默认运行级别不能设为 0，否则不能正常启动<br>运行级别 1：单用户工作状态，root权限，用于系统维护，禁止远程登陆<br>运行级别 2：多用户状态(没有 NFS)，不支持网络<br>运行级别 3：完全的多用户状态(有 NFS)，登陆后进入控制台命令行模式<br>运行级别 4：系统未使用，保留<br>运行级别 5：X11控制台，登陆后进入图形 GUI模式<br>运行级别 6：系统正常关闭并重启，默认运行级别不能设为 6，否则不能正常启动</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line">开机的流程说明</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913234941177.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chkconfig指令</span><br><span class="line">通过 chkconfig命令可以给每个服务的各个运行级别设置自启动&#x2F;关闭</span><br><span class="line">1)查看服务   chkconfig</span><br><span class="line">--list|grep   xxx</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913235152379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2) chkconfig  服务名  --list</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200913235308822.png#pic_center" alt="在这里插入图片描述"></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![在这里插入图片描述](https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;20200913235412180.png#pic_center)</span><br><span class="line"></span><br><span class="line">3)   chkconfig     --level    5  服务名 on&#x2F;off</span><br><span class="line"></span><br><span class="line">请将 sshd服务在运行级别为     5的情况下，不要自启动。</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1)案例  1 ：请显示当前系统所有服务的各个运行级别的运行状态</span><br><span class="line">bash&gt; chkconfig --list</span><br><span class="line">2)案例  2：请查看   sshd服务的运行状态</span><br><span class="line">bash&gt; service sshd status</span><br><span class="line">3)案例  3：将   sshd服务在运行级别   5下设置为不自动启动，看看有什么效果？</span><br><span class="line">bash&gt; chkconfig --level 5 sshd off</span><br><span class="line">4)案例  4：当运行级别为   5时，关闭防火墙。</span><br><span class="line">bash&gt; chkconfig   --level 5   iptables off</span><br><span class="line">5)案例  5 ：在所有运行级别下，关闭防火墙</span><br><span class="line">bash&gt; chkconfig   iptables off</span><br><span class="line">6)案例  6 ：在所有运行级别下，开启防火墙</span><br><span class="line">bash&gt; chkconfig   iptables    on</span><br><span class="line">使用细节</span><br><span class="line">1) chkconfig重新设置服务后自启动或关闭，需要重启机器 reboot才能生效.</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>动态监控进程<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">top与  ps命令很相似。它们都用来显示正在执行的进程。Top与  ps最大的不同之处，在于  top在执行一段时间可以更新正在运行的的进程。</span><br><span class="line"></span><br><span class="line">选项说明：</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200913235827849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例 1.监视特定用户</span><br><span class="line">top：输入此命令，按回车键，查看执行的进程。</span><br><span class="line">u：然后输入“u”回车，再输入用户名，即可</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200914000005812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例 2：终止指定的进程。</span><br><span class="line">top：输入此命令，按回车键，查看执行的进程。</span><br><span class="line">k：然后输入“k”回车，再输入要结束的进程 ID号</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200914000107315.png#pic_center" alt="在这里插入图片描述"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">案例 3:指定系统状态更新的时间(每隔 10秒自动更新，默认是   3秒)：</span><br><span class="line">bash&gt; top -d 10</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看系统网络情况   netstat(重要)</span><br><span class="line"></span><br><span class="line">基本语法</span><br><span class="line">netstat [选项]</span><br><span class="line">netstat -anp</span><br><span class="line">选项说明</span><br><span class="line">-an按一定顺序排列输出</span><br><span class="line">-p显示哪个进程在调用</span><br><span class="line">查看系统所有的网络服务</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/20200914000349480.png#pic_center" alt="在这里插入图片描述"><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请查看服务名为  sshd的服务的信息</span><br></pre></td></tr></table></figure>
<img src="https://img-blog.csdnimg.cn/2020091400043099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuaXF1ZV9wZXJmZWN0,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></li>
</ul>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java的地位</tag>
      </tags>
  </entry>
</search>
